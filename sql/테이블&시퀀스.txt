CREATE TABLE USERINFO (
userNumber      NUMBER PRIMARY KEY,
userId          VARCHAR2(100),
userPw          VARCHAR2(100),
userName        VARCHAR2(100),
userTel         VARCHAR2(20),
userEmail       VARCHAR2(200),
userBirth       VARCHAR2(50),
userZipCode     VARCHAR2(50),
userAddress     VARCHAR2(300),
userDetailAddress VARCHAR2(500),
userAdmin       NUMBER DEFAULT 0,
userRegdate     DATE DEFAULT SYSDATE
);


CREATE TABLE BOARD (
boardNumber     NUMBER PRIMARY KEY,
userNumber      NUMBER,
userName        VARCHAR2(50),
boardTitle      VARCHAR2(1000),
boardContent    VARCHAR2(4000),
boardWriteDate  DATE DEFAULT SYSDATE,
boardHit        NUMBER DEFAULT 0,
boardViews      NUMBER DEFAULT 0,
boardLikes      NUMBER DEFAULT 0,
FOREIGN KEY (userNumber) REFERENCES USERINFO(userNumber)ON DELETE CASCADE
);


CREATE TABLE board_likes (
boardNumber number,
userNumber number,
PRIMARY KEY (boardNumber, userNumber)
);


CREATE TABLE BOARD_COMMENT (
commentNumber       NUMBER PRIMARY KEY,
commentSubNumber    NUMBER,
commentSubStepNumber NUMBER,
boardNumber         NUMBER,
userNumber          NUMBER,
userName            VARCHAR2(50),
commentContent      VARCHAR2(4000),
commentWriteDate    DATE DEFAULT SYSDATE
);


ALTER TABLE BOARD_COMMENT
ADD CONSTRAINT fk_comment_board
FOREIGN KEY (boardNumber)
REFERENCES BOARD(boardNumber)
ON DELETE CASCADE;


ALTER TABLE BOARD_COMMENT
ADD CONSTRAINT fk_comment_user
FOREIGN KEY (userNumber)
REFERENCES USERINFO(userNumber)
ON DELETE CASCADE;
DESC board_comment;


create table apartmentinfo(
apartmentId number primary key,
sggcd VARCHAR2(10),
umdnm VARCHAR2(100),
aptnm VARCHAR2(200),
jibun VARCHAR2(100),
excluusear VARCHAR2(50),
dealYear VARCHAR2(4),
dealMonth VARCHAR2(2),
dealDay VARCHAR2(2),
dealAmount VARCHAR2(100),
floor VARCHAR2(10),
buildYear VARCHAR2(4),
cdealType VARCHAR2(50),
cdealDay VARCHAR2(50),
dealingGbn VARCHAR2(50),
estateAgentSggnm VARCHAR2(100),
rgstDate VARCHAR2(50),
aptDong VARCHAR2(50),
slerGbn VARCHAR2(50),
buyerGbn VARCHAR2(50),
landLeaseHoldGbn VARCHAR2(50),
aptSeq VARCHAR2(50),
bonbun VARCHAR2(50),
bubun VARCHAR2(50),
landCd VARCHAR2(50),
roadNm VARCHAR2(200),
roadNmBonbun VARCHAR2(50),
roadNmBubun VARCHAR2(50),
roadNmCd VARCHAR2(50),
roadNmSeq VARCHAR2(50),
roadNmSggcd VARCHAR2(50),
roadNmBcd VARCHAR2(50),
umdcd VARCHAR2(50),
lat NUMBER(12,8),
lng NUMBER(12,8),
subwayStation VARCHAR2(100),
subwayDistance VARCHAR2(50)
);


-- 위도/경도에 복합 인덱스 생성
CREATE INDEX idx_apartmentinfo_latlng ON APARTMENTINFO(lat, lng);


CREATE SEQUENCE seq_apartmentinfo
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;


create table apartment_favorite(
favoriteId number primary key,
apartmentId number,
userNumber number,
createdAt date default sysdate,


FOREIGN KEY (apartmentId) REFERENCES APARTMENTINFO(apartmentId)ON DELETE CASCADE,
FOREIGN KEY (userNumber) REFERENCES USERINFO(userNumber)ON DELETE CASCADE

    

  

);


CREATE SEQUENCE seq_apartment_favorite
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;


create table apartment_review(
REVIEWID NUMBER PRIMARY KEY,                -- 리뷰 고유 ID (시퀀스 사용)
apartmentId NUMBER NOT NULL,                 -- 도서 번호 (외래키) - 실제 타입으로 수정 필요
USERNUMBER NUMBER NOT NULL,                 -- 사용자 ID (외래키) - VARCHAR2(50)에서 NUMBER로 수정
REVIEWTITLE VARCHAR2(200) NOT NULL,         -- 리뷰 제목
REVIEWCONTENT CLOB NOT NULL,                -- 리뷰 내용 (긴 텍스트)
REVIEWRATING NUMBER(1) NOT NULL,            -- 평점 (1-5)
REVIEWDATE DATE DEFAULT SYSDATE,            -- 작성일
REVIEWMODIFIED_DATE DATE,                   -- 수정일
REVIEWSTATUS VARCHAR2(10) DEFAULT 'ACTIVE',           -- 상태 (Y: 활성, N: 삭제)


CONSTRAINT FK_REVIEW_apartment FOREIGN KEY (apartmentId) REFERENCES apartmentinfo(apartmentId),
CONSTRAINT FK_REVIEW_USER FOREIGN KEY (USERNUMBER) REFERENCES USERINFO(USERNUMBER),
CONSTRAINT CHK_REVIEW_RATING CHECK (REVIEWRATING BETWEEN 1 AND 5)


);


-- 리뷰 ID 시퀀스
CREATE SEQUENCE SEQ_REVIEW_ID
START WITH 1
INCREMENT BY 1
NOCACHE;


CREATE TABLE REVIEW_HELPFUL (
HELPFUL_ID NUMBER PRIMARY KEY,
REVIEWID NUMBER NOT NULL,
USERNUMBER NUMBER NOT NULL,
HELPFUL_DATE DATE DEFAULT SYSDATE,
CONSTRAINT FK_REVIEW_HELPFUL_REVIEW FOREIGN KEY (REVIEWID) REFERENCES apartment_REVIEW(REVIEWID),
CONSTRAINT FK_REVIEW_HELPFUL_USER FOREIGN KEY (USERNUMBER) REFERENCES USERINFO(USERNUMBER),
CONSTRAINT UQ_REVIEW_HELPFUL UNIQUE (REVIEWID, USERNUMBER)
);


-- 리뷰(도움됨)시퀀스 생성
CREATE SEQUENCE SEQ_HELPFUL_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;


-------------------------------------------------------------------------아파트 큐(년,월,시군구코드)
CREATE TABLE "METRO_HOUSE"."APARTMENTINFO_QUEUE"
(   "QUEUE_ID" NUMBER,
"APARTMENTID" NUMBER,
"SGGCD" VARCHAR2(10),
"UMDNM" VARCHAR2(100),
"APTNM" VARCHAR2(200),
"JIBUN" VARCHAR2(100),
"EXCLUUSEAR" VARCHAR2(50),
"DEALYEAR" VARCHAR2(4),
"DEALMONTH" VARCHAR2(2),
"DEALDAY" VARCHAR2(2),
"DEALAMOUNT" VARCHAR2(100),
"FLOOR" VARCHAR2(10),
"BUILDYEAR" VARCHAR2(4),
"CDEALTYPE" VARCHAR2(50),
"CDEALDAY" VARCHAR2(50),
"DEALINGGBN" VARCHAR2(50),
"ESTATEAGENTSGGNM" VARCHAR2(100),
"RGSTDATE" VARCHAR2(50),
"APTDONG" VARCHAR2(50),
"SLERGBN" VARCHAR2(50),
"BUYERGBN" VARCHAR2(50),
"LANDLEASEHOLDGBN" VARCHAR2(50),
"APTSEQ" VARCHAR2(50),
"BONBUN" VARCHAR2(50),
"BUBUN" VARCHAR2(50),
"LANDCD" VARCHAR2(50),
"ROADNM" VARCHAR2(200),
"ROADNMBONBUN" VARCHAR2(50),
"ROADNMBUBUN" VARCHAR2(50),
"ROADNMCD" VARCHAR2(50),
"ROADNMSEQ" VARCHAR2(50),
"ROADNMSGGCD" VARCHAR2(50),
"ROADNMBCD" VARCHAR2(50),
"UMDCD" VARCHAR2(50),
"LAT" NUMBER(12,8),
"LNG" NUMBER(12,8),
"SUBWAYSTATION" VARCHAR2(100),
"SUBWAYDISTANCE" VARCHAR2(50),
"PROCESSED" CHAR(1) DEFAULT 'N'
)
CREATE INDEX idx_apartmentqueue_id ON APARTMENTINFO_QUEUE(apartmentid);
CREATE SEQUENCE SEQ_APARTMENTINFO_QUEUE
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;
